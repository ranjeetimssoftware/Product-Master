{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n/**\r\n * @title Dialog elements\r\n */\n\nlet GenericDivisionMappingComponent = class GenericDivisionMappingComponent {\n  constructor() {\n    this.DialogObj = {};\n    this.filteredDivisionList = [];\n    this.isOpen = false;\n    this.selectedItems = new EventEmitter();\n    this.DialogObj.dataArray = [];\n  }\n\n  openDialog(dialogObj) {\n    this.DialogObj = dialogObj;\n    this.filteredDivisionList = this.DialogObj.dataArray;\n    this.isOpen = true;\n  }\n\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.filteredDivisionList = this.DialogObj.dataArray.filter(x => x.divisionName.toLowerCase().includes(filterValue.trim().toLowerCase()));\n  }\n\n  close(res) {\n    if (res == \"ok\") {\n      let divisionList = this.filteredDivisionList.filter(x => x.isChecked);\n      this.selectedItems.emit(divisionList);\n    }\n\n    this.isOpen = false; // Method to close the pop-up\n  }\n\n};\n\n__decorate([Output()], GenericDivisionMappingComponent.prototype, \"selectedItems\", void 0);\n\nGenericDivisionMappingComponent = __decorate([Component({\n  selector: 'generic-division-mapping',\n  templateUrl: 'generic-division-mapping.component.html',\n  styleUrls: ['./generic-division-mapping.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], GenericDivisionMappingComponent);\nexport { GenericDivisionMappingComponent };","map":null,"metadata":{},"sourceType":"module"}