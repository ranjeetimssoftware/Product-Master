{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet AlternateUnitComponent = class AlternateUnitComponent {\n  constructor(productMasterService) {\n    this.productMasterService = productMasterService;\n    this.Units = [];\n    this.productObj = {};\n    this.CurAltUnit = {};\n    this.AlternateUnits = [];\n    this.userSetting = this.productMasterService.userSetting;\n    this.getAllUnits();\n  }\n\n  ngOnInit() {}\n\n  getAllUnits() {\n    this.productMasterService.getUnits().subscribe(res => {\n      this.Units = res;\n    });\n  }\n\n  addAltUnit() {\n    if (this.CurAltUnit.ALTUNIT == \"\" || this.CurAltUnit.ALTUNIT == undefined || this.CurAltUnit.ALTUNIT == null) {\n      this.productMasterService.openSuccessDialog(\"Please Select a Unit first.\");\n      return;\n    }\n\n    if (this.CurAltUnit.CONFACTOR == 0 || this.CurAltUnit.CONFACTOR == undefined || this.CurAltUnit.CONFACTOR == null) {\n      this.productMasterService.openSuccessDialog(\"Please Enter conversion factor.\");\n      return;\n    }\n\n    this.AlternateUnits.push(this.CurAltUnit);\n    this.CurAltUnit = {};\n  }\n\n  removeAltUnit(i) {\n    this.AlternateUnits.splice(i, 1);\n  }\n\n  RecalculateVATAmount() {\n    if (this.productObj.VAT == 1) {\n      let vatrate = this.userSetting.VatConRate;\n\n      if (this.CurAltUnit.IN_RATE) {\n        let RATE = (this.CurAltUnit.IN_RATE / vatrate).toFixed(2);\n        this.CurAltUnit.RATE = Number(RATE);\n      } else this.CurAltUnit.RATE = 0;\n\n      if (this.CurAltUnit.IN_RATE_B) {\n        let RATE_B = (this.CurAltUnit.IN_RATE_B / vatrate).toFixed(2);\n        this.CurAltUnit.RATE_B = Number(RATE_B);\n      } else this.CurAltUnit.RATE_B = 0;\n    } else {\n      if (this.CurAltUnit.IN_RATE) this.CurAltUnit.RATE = this.CurAltUnit.IN_RATE;else this.CurAltUnit.RATE = 0;\n      if (this.CurAltUnit.IN_RATE_B) this.CurAltUnit.RATE_B = this.CurAltUnit.IN_RATE_B;else this.CurAltUnit.RATE_B = 0;\n    }\n  }\n\n  RecalculateNonVATAmount_EX_RATE() {\n    if (this.productObj.VAT == 1) {\n      if (this.CurAltUnit.RATE) {\n        let IN_RATE = (this.CurAltUnit.RATE * 1.13).toFixed(2);\n        this.CurAltUnit.IN_RATE = Number(IN_RATE);\n      } else this.CurAltUnit.IN_RATE = 0;\n    } else {\n      if (this.CurAltUnit.RATE) {\n        this.CurAltUnit.IN_RATE = this.CurAltUnit.RATE;\n      } else this.CurAltUnit.IN_RATE = 0;\n    }\n  }\n\n  RecalculateNonVATAmount_EX_RATE_B() {\n    if (this.productObj.VAT == 1) {\n      if (this.CurAltUnit.RATE_B) {\n        let IN_RATE_B = (this.CurAltUnit.RATE_B * 1.13).toFixed(2);\n        this.CurAltUnit.IN_RATE_B = Number(IN_RATE_B);\n      } else this.CurAltUnit.IN_RATE_B = 0;\n    } else {\n      if (this.CurAltUnit.RATE_B) {\n        this.CurAltUnit.IN_RATE_B = this.CurAltUnit.RATE_B;\n      } else this.CurAltUnit.IN_RATE_B = 0;\n    }\n  }\n\n  ngAfterViewInit() {}\n\n};\n\n__decorate([Input()], AlternateUnitComponent.prototype, \"productObj\", void 0);\n\n__decorate([Input()], AlternateUnitComponent.prototype, \"CurAltUnit\", void 0);\n\n__decorate([Input()], AlternateUnitComponent.prototype, \"AlternateUnits\", void 0);\n\nAlternateUnitComponent = __decorate([Component({\n  selector: 'lib-alternate-unit',\n  templateUrl: './alternate-unit.component.html',\n  styleUrls: ['./alternate-unit.component.css']\n})], AlternateUnitComponent);\nexport { AlternateUnitComponent };","map":null,"metadata":{},"sourceType":"module"}