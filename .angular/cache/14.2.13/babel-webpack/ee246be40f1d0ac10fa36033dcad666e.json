{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as uuid from 'uuid';\nimport { DetailInfoComponent } from '../../components/detail-info/detail-info.component';\nimport { AlternateUnitComponent } from '../../components/alternate-unit/alternate-unit.component';\nlet CreateProductComponent = class CreateProductComponent {\n  constructor(router, fb, dialog, _activatedRoute, productMasterService) {\n    this.router = router;\n    this.fb = fb;\n    this.dialog = dialog;\n    this._activatedRoute = _activatedRoute;\n    this.productMasterService = productMasterService;\n    this.mode = 'add';\n    this.isGroupSelectionVisible = false;\n    this.disabledSubgroupA = true;\n    this.disabledSubgroupB = true;\n    this.disabledSubgroupC = true;\n    this.productObj = {};\n    this.groupSelectObj = {};\n    this.prodObj = {};\n    this.selectedGroupInfo = {};\n    this.PMultipleRetailPrice = [];\n    this.mainGroupList = [];\n    this.subGroupAList = [];\n    this.subGroupBList = [];\n    this.subGroupCList = [];\n    this.Units = [];\n    this.DivisionList = [];\n    this.PTypeList = [];\n    this.PBarCode = {};\n    this.PBarCodeCollection = [];\n    this.AlternateUnits = [];\n    this.CurAltUnit = {};\n    this.selectedTab = 0;\n    this.userSetting = this.productMasterService.userSetting;\n    this.ProductForm = this.fb.group({\n      CustomerCode: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    if (!!this._activatedRoute.snapshot.params['returnUrl']) {\n      this.returnUrl = this._activatedRoute.snapshot.params['returnUrl'];\n    }\n\n    if (this.mode == 'add') {\n      this.productObj.guid = uuid.v4();\n      this.productObj.Weighable = 'kg';\n      this.productObj.COLOR = '';\n      this.productObj.VOLUME = '';\n      this.productObj.SETTING = 'no';\n      this.productObj.STATUS = 1;\n      this.productObj.VAT = 1;\n      let self = this;\n      this.productObj.ItemRateDiscount = {};\n      this.productObj.MultiStockLevels = [];\n\n      if (this.userSetting.EnableItemExtraInfo == 1) {\n        this.productObj.ItemExtraInfo = {};\n      }\n\n      if (this.userSetting.EnableAlternateItem == 0) {\n        this.productObj.AlternateProducts = [];\n      }\n    }\n\n    this.getAllMajorGroup();\n    this.getAllUnits();\n  }\n\n  OnGroupChanges() {\n    var _a, _b;\n\n    if (this.selectedGroupInfo != undefined) {\n      if (this.mode == 'add') {\n        this.productObj.MgroupName = this.selectedGroupInfo.DESCA;\n        this.productObj.MCAT = this.selectedGroupInfo.MCAT;\n        this.productObj.ItemCostCenter = this.selectedGroupInfo.ItemCostCenter;\n        this.productObj.MARGIN = this.selectedGroupInfo.MARGIN;\n        this.productObj.MGROUP = this.selectedGroupInfo.MGROUP;\n        this.productObj.PARENT = this.selectedGroupInfo.MCODE;\n        this.productObj.MENUCODE = (_a = this.selectedGroupInfo) === null || _a === void 0 ? void 0 : _a.MENUCODE;\n        this.productObj.Divisions = (_b = this.selectedGroupInfo) === null || _b === void 0 ? void 0 : _b.DIVISIONS;\n\n        if (this.userSetting.ITEMGROUPCODELEVEL > this.selectedGroupInfo.LEVEL) {\n          this.productObj.MENUCODE = \"\";\n          this.productObj.DESCA = \"\";\n          return;\n        } else {\n          if (this.userSetting.AUTOCODEMODE == 0) {\n            this.generateUniqueKey(this.selectedGroupInfo.MGROUP, this.selectedGroupInfo.MCODE, this.selectedGroupInfo.MCAT);\n          }\n        } // }\n\n      } else if (this.mode == \"edit\") {\n        if (this.userSetting.ITEMGROUPCODELEVEL > this.selectedGroupInfo.LEVEL) {\n          this.productObj.MENUCODE = \"\";\n          this.productObj.BASEUNIT = \"\";\n          this.productObj.MCAT = \"\";\n          return;\n        } else {\n          if (this.selectedGroupInfo.PARENT == \"PRG99999999\") {\n            if (this.selectedGroupInfo.MGROUP == this.tempMGROUP) {\n              this.productObj.MENUCODE = this.tempMENUCODE;\n            } else {\n              if (this.userSetting.EnableMenucodeGenerationInEdit == 1) {\n                this.generateUniqueKey(this.selectedGroupInfo.MGROUP, this.selectedGroupInfo.MCODE, this.selectedGroupInfo.MCAT);\n              }\n            }\n          } else {\n            if (this.userSetting.ITEMGROUPCODELEVEL > 1) {\n              //added by anubhav\n              if (this.selectedGroupInfo.MCODE == this.tempPARENT) {\n                this.productObj.MENUCODE = this.tempMENUCODE;\n              } else {\n                if (this.userSetting.EnableMenucodeGenerationInEdit == 1) {\n                  this.generateUniqueKey(this.selectedGroupInfo.MGROUP, this.selectedGroupInfo.MCODE, this.selectedGroupInfo.MCAT);\n                }\n              }\n            }\n          }\n\n          this.productObj.MARGIN = this.selectedGroupInfo.MARGIN;\n          this.productObj.MGROUP = this.selectedGroupInfo.MGROUP;\n          this.productObj.PARENT = this.selectedGroupInfo.MCODE;\n          this.productObj.MCAT = this.selectedGroupInfo.MCAT;\n          this.productObj.ItemCostCenter = this.selectedGroupInfo.ItemCostCenter;\n        }\n      }\n    } else {}\n  }\n\n  generateUniqueKey(groupID, PARENT, MCAT) {\n    if (this.userSetting.AUTOCODEMODE == 1) {\n      this.productMasterService.getAutoGenerateMenuCode(groupID, PARENT, MCAT).subscribe(res => {\n        if (res.status == 'ok') {\n          this.productObj.MENUCODE = res.result;\n          this.selectedGroupInfo.MENUCODE = res.result;\n        }\n      });\n    } else {\n      this.productMasterService.getAutoGenerateMenuCode(groupID, PARENT).subscribe(res => {\n        if (res.status == 'ok') {\n          this.productObj.MENUCODE = res.result;\n        }\n      });\n    } // }\n\n  } // Method to handle tab change\n\n\n  onTabChange(index) {\n    this.selectedTab = index;\n  }\n\n  goBack() {\n    this.router.navigate([this.returnUrl]); // Navigate to the previous route\n  }\n\n  keyPress(event) {\n    const pattern = /[0-9]/;\n    const inputChar = String.fromCharCode(event.charCode);\n\n    if (!pattern.test(inputChar)) {\n      // invalid character, prevent input\n      event.preventDefault();\n    }\n  }\n\n  close(status) {\n    if (status == \"ok\") {\n      this.OnGroupChanges();\n    }\n\n    this.isGroupSelectionVisible = !this.isGroupSelectionVisible;\n  }\n\n  changeHasBatchWisePricing(event) {\n    this.productObj.HASBATCH = event;\n\n    if (this.productObj.HASBATCH == 1 && this.checkForAmountBaseDiscount()) {\n      this.productMasterService.openSuccessDialog(\"Amount Base Rate is not supported for Alternate Unit when Batch Wise Price is enabled. Please, Change Its price to Discount Mode First to Proceed.\");\n      this.productObj.HASBATCH = 0;\n    }\n  }\n\n  checkForAmountBaseDiscount() {\n    let amountBasedValue = this.AlternateUnits.filter(x => x.RATE || x.RATE_B || x.IN_RATE || x.IN_RATE_B);\n\n    if (amountBasedValue && amountBasedValue.length > 0 || this.CurAltUnit.RATE || this.CurAltUnit.IN_RATE || this.CurAltUnit.RATE_B || this.CurAltUnit.IN_RATE_B) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getAllMajorGroup() {\n    this.productMasterService.getMainGroupList().subscribe(response => {\n      if (response.length > 0) {\n        this.mainGroupList = response;\n      } else {\n        this.mainGroupList = [];\n      }\n    });\n  }\n\n  getSubGroupA(e) {\n    const input = e.target;\n    let mainGroupID = input.value;\n\n    if (this.userSetting.AUTOCODEMODE == 1) {\n      this.productMasterService.getAutoGenerateMenuCode(mainGroupID, mainGroupID).subscribe(res => {\n        if (res.status == 'ok') {\n          this.prodObj.MENUCODE = res.result;\n          this.selectedGroupInfo = this.prodObj;\n        }\n      });\n    } else {\n      this.uniqueKey(mainGroupID);\n    }\n\n    this.productMasterService.getSubGroupList(mainGroupID).subscribe(res => {\n      if (res.length > 0) {\n        this.subGroupAList = res;\n        this.subGroupAList = res;\n        this.disabledSubgroupA = false;\n        this.disabledSubgroupB = true;\n        this.disabledSubgroupC = true;\n        this.groupSelectObj.SUBGROUP_A = \"\";\n        this.groupSelectObj.SUBGROUP_B = \"\";\n        this.groupSelectObj.SUBGROUP_C = \"\";\n      } else {\n        this.subGroupAList = [];\n        this.subGroupAList = [];\n        this.groupSelectObj.SUBGROUP_A = \"\";\n        this.groupSelectObj.SUBGROUP_B = \"\";\n        this.groupSelectObj.SUBGROUP_C = \"\";\n        this.disabledSubgroupA = true;\n        this.disabledSubgroupB = true;\n        this.disabledSubgroupC = true;\n      }\n    }); // this.PComponent.changeTree()\n  }\n\n  getSubGroupB(e) {\n    const input = e.target;\n    let subGroupAID = input.value; // this.PARENT = e.target.value;\n\n    if (this.userSetting.AUTOCODEMODE == 1) {\n      this.productMasterService.getAutoGenerateMenuCode(subGroupAID, subGroupAID).subscribe(res => {\n        if (res.status == 'ok') {\n          this.prodObj.MENUCODE = res.result;\n          this.selectedGroupInfo = this.prodObj;\n        }\n      });\n    } else {\n      this.uniqueKey(subGroupAID);\n    }\n\n    this.productMasterService.getSubGroupList(subGroupAID).subscribe(res => {\n      if (res.length > 0) {\n        this.subGroupBList = res;\n        this.subGroupBList = res;\n        this.disabledSubgroupB = false;\n        this.disabledSubgroupC = true;\n      } else {\n        this.subGroupBList = [];\n        this.groupSelectObj.SUBGROUP_B = \"\";\n        this.disabledSubgroupB = true;\n        this.disabledSubgroupC = true;\n      }\n    });\n  }\n\n  getSubGroupC(e) {\n    const input = e.target;\n    let subGroupBID = input.value; // this.PARENT = e.target.value;\n\n    if (this.userSetting.AUTOCODEMODE == 1) {\n      this.productMasterService.getAutoGenerateMenuCode(subGroupBID, subGroupBID).subscribe(res => {\n        if (res.status == 'ok') {\n          this.prodObj.MENUCODE = res.result;\n          this.selectedGroupInfo = this.prodObj;\n        }\n      });\n    } else {\n      this.uniqueKey(subGroupBID);\n    }\n\n    this.productMasterService.getSubGroupList(subGroupBID).subscribe(res => {\n      if (res.length > 0) {\n        this.subGroupCList = res;\n        this.subGroupCList = res;\n        this.disabledSubgroupC = false;\n      } else {\n        if (this.userSetting.AUTOCODEMODE != 1) {\n          this.uniqueKey(subGroupBID);\n        }\n\n        this.subGroupCList = [];\n        this.subGroupCList = [];\n        this.groupSelectObj.SUBGROUP_C = \"\";\n        this.disabledSubgroupC = true;\n      }\n    });\n  }\n\n  selectedSubGroupC(e) {\n    const input = e.target;\n    this.uniqueKey(input.value);\n  }\n\n  getAllUnits() {\n    this.productMasterService.getUnits().subscribe(res => {\n      this.Units = res;\n      this.productMasterService.getPTypeList().subscribe(res => {\n        if (res) {\n          this.PTypeList = res;\n\n          if (this.mode != 'edit') {\n            this.productObj.PTYPE = this.PTypeList[0].PTYPEID;\n            this.productObj.NATURETYPE = this.PTypeList[0].NATURETYPE;\n          }\n        } else {\n          this.PTypeList = [];\n        }\n      }, error => {\n        this.PTypeList = [];\n      });\n    });\n  }\n\n  uniqueKey(groupID) {\n    this.productMasterService.getProductInfo(groupID).subscribe(res => {\n      if (res.status == \"ok\") {\n        if (this.userSetting.AUTOCODEMODE == 1) {\n          res.result[0].MCAT = '';\n          res.result[0].MENUCODE = '';\n        }\n\n        let prodObj = res.result[0];\n        prodObj.LEVEL = res.result2[0].ITEM_LEVEL;\n        this.selectedGroupInfo = prodObj;\n      }\n    });\n  }\n\n  AddBCode() {\n    try {\n      this.PBarCodeCollection.forEach(x => {\n        x.MRP = this.productObj.IN_RATE_A;\n        x.MRP_WO_VAT = this.productObj.RATE_A;\n        x.SRATE = this.productObj.RATE_A;\n      });\n\n      if (this.productObj.BARCODE == null || this.productObj.BARCODE === '0' || this.productObj.BARCODE === undefined) {\n        this.PBarCode.BCODE = this.productObj.MENUCODE;\n      } else {\n        this.PBarCode.BCODE = this.productObj.BARCODE;\n      }\n\n      this.PBarCode.MCODE = this.productObj.MCODE;\n      this.PBarCode.UNIT = this.productObj.BASEUNIT;\n      this.PBarCode.MRP = this.productObj.IN_RATE_A;\n      this.PBarCode.MRP_WO_VAT = this.productObj.RATE_A;\n      this.PBarCode.SRATE = this.productObj.RATE_A;\n      this.PBarCode.DISCONTINUE = 0;\n      this.PBarCode.ISDEFAULT = 1;\n      let duplicateBC = this.PBarCodeCollection.filter(x => x.BCODE == this.productObj.MENUCODE);\n\n      if (duplicateBC.length == 0) {\n        this.PBarCodeCollection.push(this.PBarCode);\n      }\n    } catch (ex) {\n      console.log(ex);\n      alert(ex);\n    }\n  }\n\n  onCheckVATOption(event) {\n    const input = event.target;\n\n    if (input) {\n      this.productObj.VAT = input.checked ? 1 : 0;\n      this.child.RecalculateVATAmount(); // if(this.productObj.VAT == 1)\n      //   this.AlternateUnitCom.RecalculateVATAmount();\n      // else\n      //   this.AlternateUnitCom.RecalculateNonVATAmount_EX_RATE();\n      //   this.AlternateUnitCom.RecalculateNonVATAmount_EX_RATE_B();\n    } else {\n      alert(\"Invalid input element\");\n    }\n  }\n\n  onSubmit() {\n    var _a;\n\n    if (this.productObj.DESCA == '' || this.productObj.DESCA == null || this.productObj.DESCA == undefined) {\n      this.productMasterService.openSuccessDialog(\"Please Enter Item Name.\");\n      return;\n    }\n\n    if (this.userSetting.MANUALCODE == 1) {\n      if (this.productObj.MENUCODE == \"\" || this.productObj.MENUCODE == null || this.productObj.MENUCODE == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Enter Item Code.\");\n        return;\n      }\n    }\n\n    if (this.userSetting.CompulsoryHSCodeInput == 1) {\n      if (this.productObj.HSNCode == '' || this.productObj.HSNCode == null || this.productObj.HSNCode == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Enter HS Code.\");\n        return;\n      }\n    }\n\n    if (this.productObj.MGROUP == \"\" || this.productObj.MGROUP == null || this.productObj.MGROUP == undefined) {\n      this.productMasterService.openSuccessDialog(\"Please Select Item Group.\");\n      return;\n    }\n\n    if (this.productObj.BASEUNIT == \"\" || this.productObj.BASEUNIT == null || this.productObj.BASEUNIT == undefined) {\n      this.productMasterService.openSuccessDialog(\"Please Select Stock Unit.\");\n      return;\n    }\n\n    if (this.productObj.discontinueCheckbox && (this.productObj.DISCONTINUE == null || this.productObj.DISCONTINUE == undefined)) {\n      this.productMasterService.openSuccessDialog(\"Please Select Item Discontinued for.\");\n      return;\n    }\n\n    if (this.productObj.HASECSCHARGE == 1 && (this.productObj.ECSRATE == null || this.productObj.ECSRATE == undefined || this.productObj.ECSRATE == 0)) {\n      this.productMasterService.openSuccessDialog(\"Please Enter ECS Rate.\");\n      return;\n    }\n\n    if (((_a = this.productMasterService.pObj) === null || _a === void 0 ? void 0 : _a.RecMarginOnPRate) < this.productObj.MARGIN) {\n      this.productMasterService.openSuccessDialog(\"Calculated Margin on cost price is less than recommended margin.\");\n      return;\n    }\n\n    if (this.userSetting.EnableProductWiseAccMapping == 1) {\n      if (this.productObj.SAC_ACNAME == \"\" || this.productObj.SAC_ACNAME == null || this.productObj.SAC_ACNAME == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Select Sales Account.\");\n        return;\n      }\n\n      if (this.productObj.SRAC_ACNAME == \"\" || this.productObj.SRAC_ACNAME == null || this.productObj.SRAC_ACNAME == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Select Sales Return Account.\");\n        return;\n      }\n\n      if (this.productObj.PAC_ACNAME == \"\" || this.productObj.PAC_ACNAME == null || this.productObj.PAC_ACNAME == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Select Purchase Account.\");\n        return;\n      }\n\n      if (this.productObj.PRAC_ACNAME == \"\" || this.productObj.PRAC_ACNAME == null || this.productObj.PRAC_ACNAME == undefined) {\n        this.productMasterService.openSuccessDialog(\"Please Select Purchase Return Account.\");\n        return;\n      }\n    }\n\n    this.productObj.PCL = 'pc002';\n    this.productObj.TYPE = 'A';\n    this.productObj.LEVELS = 0;\n    this.productObj.Location = this.productObj.Location ? this.productObj.Location.toString() : '';\n\n    if (this.mode != 'edit') {\n      this.productMasterService.userSetting.MANUALCODE == 1 ? this.productObj.FCODE = 0 : this.productObj.FCODE = Number(this.productObj.MENUCODE);\n    }\n\n    if (this.mode === 'add') {\n      this.AddBCode();\n    }\n\n    this.productObj.Divisions = this.DivisionList.map(x => x.div).join(',') || '';\n    this.productMasterService.saveProduct(this.mode, this.productObj, [], [], this.PBarCodeCollection, [], this.PMultipleRetailPrice, []).subscribe(data => {\n      if (data.status === 'ok') {\n        this.productObj = {};\n        this.productObj.MENUCODE = '';\n        this.productObj.MCODE = '';\n        this.productObj.BRAND = '';\n        this.productObj.DESCA = '';\n        this.productObj.Description = '';\n        this.productObj.BRANDCODE = '';\n        this.productObj.GWEIGHT = '';\n        this.productObj.LENGTH = null;\n        this.productObj.WIDTH = null;\n        this.productObj.BREADTH = null;\n        this.productObj.SHELFLIFE = 0;\n        this.productObj.MRP = 0;\n        this.productObj.DESCB = '';\n        this.productObj.PTYPE = 0;\n        this.productObj.BASEUNIT = '';\n        this.productObj.SUPCODE = null;\n        this.productObj.SUPITEMCODE = '';\n        this.productObj.PRATE_A = 0;\n        this.productObj.DISMODE = '';\n        this.productObj.IN_RATE_A = 0;\n        this.productObj.IN_RATE_B = 0;\n        this.productObj.IN_RATE_C = 0;\n        this.productObj.RATE_A = 0;\n        this.productObj.RATE_B = 0;\n        this.productObj.RATE_C = 0;\n        this.productObj.ISUNKNOWN = 0;\n        this.productObj.ISAMOUNTWISEBILL = 0;\n        this.productObj.REQEXPDATE = 0;\n        this.productObj.IsQtyUnknown = 0;\n        this.productObj.HASSERVICECHARGE = 0;\n        this.productObj.HASECSCHARGE = 0;\n        this.productObj.Description = '';\n        this.productObj.supplierName = '';\n        this.productObj.SHELFLIFE = 0;\n        this.productObj.guid = uuid.v4();\n        this.AlternateUnits = [];\n        this.productObj.AlternateProducts = [];\n        this.DivisionList = [];\n        this.PBarCodeCollection = [];\n        this.selectedGroupInfo.MENUCODE = '';\n        this.productObj.MultiStockLevels = [];\n\n        if (this.userSetting.EnableProductWiseAccMapping == 0) {\n          this.productMasterService.getSalesInfo().subscribe(data => {\n            const arrayData = Object.values(data);\n            let salesAc = arrayData.filter(x => x.ACID == this.userSetting.SalesAc);\n            this.productObj.SAC_ACNAME = salesAc[0].ACNAME;\n            let salesReturnAc = arrayData.filter(x => x.ACID == this.userSetting.SalesReturnAc);\n            this.productObj.SRAC_ACNAME = salesReturnAc[0].ACNAME;\n            let purchaseAc = arrayData.filter(x => x.ACID == this.userSetting.PurchaseAc);\n            this.productObj.PAC_ACNAME = purchaseAc[0].ACNAME;\n            let purchaseReturnAc = arrayData.filter(x => x.ACID == this.userSetting.PurchaseReturnAc);\n            this.productObj.PRAC_ACNAME = purchaseReturnAc[0].ACNAME;\n          });\n        }\n\n        this.productMasterService.openSuccessDialog(\"Data Saved Successfully!\");\n        setTimeout(() => {\n          if (confirm(\"Do you want to continue adding products to this group ?\")) {\n            this.mode = 'add';\n            this.generateUniqueKey(this.userSetting.AUTOCODEMODE == 1 ? this.selectedGroupInfo.MCODE : this.selectedGroupInfo.MGROUP, this.userSetting.AUTOCODEMODE == 1 ? this.selectedGroupInfo.MCODE : this.selectedGroupInfo.MGROUP, this.userSetting.AUTOCODEMODE == 1 ? '' : this.selectedGroupInfo.MCAT);\n            this.productObj.RATE_A = 0;\n            this.productObj.RATE_B = 0;\n            this.productObj.RATE_C = 0;\n            this.productObj.PRATE_A = 0;\n            this.productObj.IN_RATE_A = 0;\n            this.productObj.IN_PRATE_A = 0;\n            this.productObj.IN_RATE_B = 0;\n            this.productObj.IN_RATE_C = 0;\n            this.productObj.VAT = 1;\n            this.productObj.discontinueCheckbox = false;\n            this.productObj.DISMODE = 'Discountable';\n            this.productObj.PRATE_A = 0;\n            this.productObj.IN_RATE_A = 0;\n            this.productObj.SHELFLIFE = 0;\n            this.productObj.MgroupName = this.selectedGroupInfo.DESCA;\n            this.productObj.MCAT = this.selectedGroupInfo.MCAT;\n            this.productObj.ItemCostCenter = this.selectedGroupInfo.ItemCostCenter;\n            this.productObj.MARGIN = this.selectedGroupInfo.MARGIN;\n            this.productObj.MGROUP = this.selectedGroupInfo.MGROUP;\n            this.productObj.PARENT = this.selectedGroupInfo.MCODE;\n            this.productObj.guid = uuid.v4();\n            this.productMasterService.pObj = {};\n            this.productMasterService.getPTypeList().subscribe(res => {\n              if (res) {\n                this.productObj.PTYPE = res[0].PTYPEID;\n              }\n            });\n          } else {\n            this.productMasterService.getProductInfo('PRG99999999').subscribe(result => {\n              this.selectedGroupInfo = result.result[0];\n            });\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  preventInput($event) {\n    $event.preventDefault();\n    return false;\n  }\n\n};\n\n__decorate([ViewChild(DetailInfoComponent)], CreateProductComponent.prototype, \"child\", void 0);\n\n__decorate([ViewChild(AlternateUnitComponent)], CreateProductComponent.prototype, \"AlternateUnitCom\", void 0);\n\nCreateProductComponent = __decorate([Component({\n  selector: 'lib-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.css']\n})], CreateProductComponent);\nexport { CreateProductComponent };","map":null,"metadata":{},"sourceType":"module"}