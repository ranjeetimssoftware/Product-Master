{"ast":null,"code":"import { GenericDialogComponent } from './shared/components/generic/generic-dialog/generic-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"./config.service\";\nexport let PartyMasterLibraryService = /*#__PURE__*/(() => {\n  class PartyMasterLibraryService {\n    constructor(http, dialog, configService) {\n      this.http = http;\n      this.dialog = dialog;\n      this.configService = configService;\n      this.customermasterObj = {};\n      this.customermasterObj.status = 1;\n      this.customermasterObj.AdditionalInfo = {};\n      this.getAllsettings().subscribe(res => {\n        if (res.status == \"ok\") this.userSettings = JSON.parse(res.result);\n      });\n    }\n\n    get apiUrl() {\n      // let url = this.state.getGlobalSetting(\"apiUrl\");\n      let url = this.configService.getApiUrl();\n      let apiUrl = \"\";\n\n      if (!!url && url.length > 0) {\n        apiUrl = url;\n      }\n\n      ;\n      return apiUrl;\n    }\n\n    reset() {\n      this.customermasterObj = {};\n      this.customermasterObj.status = 1;\n      this.customermasterObj.AdditionalInfo = {};\n      this.customermasterObj.customerPartyAccount = {};\n      this.customermasterObj.contactPerson = [];\n      this.customermasterObj.documentUpload = [];\n      this.customermasterObj.AdditionalInfo.membershipInfo = {};\n\n      if (this.userSettings.CompanyType == 'B2B') {\n        this.customermasterObj.isCustomerLedger = 1;\n      }\n    }\n\n    openSuccessDialog(Message) {\n      this.dialog.open(GenericDialogComponent, {\n        minWidth: '25rem',\n        data: {\n          Title: \"Information\",\n          Message: Message\n        }\n      });\n    }\n\n    openErrorDialog(Message) {\n      this.dialog.open(GenericDialogComponent, {\n        minWidth: '25rem',\n        data: {\n          Title: \"Error\",\n          Message: Message\n        }\n      });\n    }\n\n    getCustomerList(ptype) {\n      return this.http.get(this.apiUrl + `/getAllCustomer?ptype=${ptype}`);\n    }\n\n    saveCustomer(mode, dataObj) {\n      let data = {\n        mode: mode,\n        data: dataObj\n      };\n      return this.http.post(this.apiUrl + `/saveCustomerProfile`, data);\n    }\n\n    saveNewLedgerGroup(mode, dataObj) {\n      let data = {\n        mode: mode,\n        data: dataObj\n      };\n      return this.http.post(this.apiUrl + `/saveNewLedgerGroup`, data);\n    }\n\n    saveNewSubLedgerGroup(mode, dataObj) {\n      let data = {\n        mode: mode,\n        data: dataObj\n      };\n      return this.http.post(this.apiUrl + `/saveNewSubLedger`, data);\n    }\n\n    getCustomerById(ptype, acid) {\n      return this.http.get(this.apiUrl + `/getAllCustomerById?ptype=${ptype}&acid=${acid}`);\n    }\n\n    getLedgerGroup(acid) {\n      return this.http.get(this.apiUrl + `/getLedgerGroup?acid=${acid}`);\n    }\n\n    getSubLegerById(id) {\n      return this.http.get(this.apiUrl + `/getSubLegerById?id=${id}`);\n    }\n\n    getAllsettings() {\n      return this.http.get(this.apiUrl + '/getAllSetting');\n    }\n\n    getLedgerGroupList() {\n      return this.http.get(this.apiUrl + '/getLedgerGroups');\n    }\n\n    getSubLedgerList() {\n      return this.http.get(this.apiUrl + '/getAllSubLeger');\n    }\n\n    getArea() {\n      return this.http.get(this.apiUrl + '/getAreaDetail');\n    }\n\n    getDistrict() {\n      return this.http.get(this.apiUrl + '/getDistrict');\n    }\n\n    getContractPriceList() {\n      return this.http.get(this.apiUrl + '/getContractPriceList');\n    }\n\n    getMemberSchemeList() {\n      return this.http.get(this.apiUrl + '/getMemberSchemeList');\n    }\n\n    getcategorywiseconfiguration() {\n      return this.http.get(this.apiUrl + '/getcategorywiseconfiguration');\n    }\n\n    getSalesmanList() {\n      return this.http.get(this.apiUrl + '/getSalesmanList ');\n    }\n\n    getDivisionList() {\n      return this.http.get(this.apiUrl + '/ ');\n    }\n\n    getParentGroupTree() {\n      return this.http.get(this.apiUrl + '/getaccounttree');\n    }\n\n    uploadDocument(body) {\n      return this.http.post(`${this.apiUrl}/FileUpload`, body);\n    }\n\n  }\n\n  PartyMasterLibraryService.ɵfac = function PartyMasterLibraryService_Factory(t) {\n    return new (t || PartyMasterLibraryService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatDialog), i0.ɵɵinject(i3.ConfigService));\n  };\n\n  PartyMasterLibraryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PartyMasterLibraryService,\n    factory: PartyMasterLibraryService.ɵfac,\n    providedIn: 'root'\n  });\n  return PartyMasterLibraryService;\n})();","map":null,"metadata":{},"sourceType":"module"}