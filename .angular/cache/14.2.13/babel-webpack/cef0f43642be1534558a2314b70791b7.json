{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MultiSelectGenericPopUpSettings } from '../../shared/components/generic/multiselect-generic-grid/multiselect-generic-grid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../party-master-library.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../shared/components/generic/multiselect-generic-grid/multiselect-generic-grid.component\";\nconst _c0 = [\"genericMultiSelectLedger\"];\n\nfunction CreateSubLedgerComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"label\", 28);\n    i0.ɵɵtext(3, \"Main Ledger Name\");\n    i0.ɵɵelementStart(4, \"span\", 14);\n    i0.ɵɵtext(5, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(6, \"svg\", 15);\n    i0.ɵɵelement(7, \"path\", 16)(8, \"path\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(9, \"div\", 18)(10, \"input\", 29);\n    i0.ɵɵlistener(\"keydown\", function CreateSubLedgerComponent_div_42_Template_input_keydown_10_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onKeyDown($event));\n    })(\"focus\", function CreateSubLedgerComponent_div_42_Template_input_focus_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onEnterMainLedgerList());\n    })(\"ngModelChange\", function CreateSubLedgerComponent_div_42_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.subledgerObj.MainLedgerName = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.subledgerObj.MainLedgerName);\n  }\n}\n\nexport let CreateSubLedgerComponent = /*#__PURE__*/(() => {\n  class CreateSubLedgerComponent {\n    constructor(router, fb, _activatedRoute, partyMasterService) {\n      this.router = router;\n      this.fb = fb;\n      this._activatedRoute = _activatedRoute;\n      this.partyMasterService = partyMasterService;\n      this.subledgerObj = {};\n      this.mode = 'add';\n      this.gridPopupSettingsForLedger = new MultiSelectGenericPopUpSettings();\n      this.subLedgerForm = this.fb.group({\n        SubLedgerName: ['', Validators.required],\n        PanNo: ['', Validators.required],\n        MainLedgerName: ['', Validators.required],\n        hasMainLedger: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      if (!!this._activatedRoute.snapshot.params['returnUrl']) {\n        this.returnUrl = this._activatedRoute.snapshot.params['returnUrl'];\n      }\n\n      if (!!this._activatedRoute.snapshot.params['mode']) {\n        if (this._activatedRoute.snapshot.params['mode'] === 'view') {\n          this.mode = 'view';\n          this.subLedgerForm.disable();\n        }\n\n        let acid = this._activatedRoute.snapshot.params['acid'];\n        this.partyMasterService.getSubLegerById(acid).subscribe(res => {\n          if (res.status == \"ok\") {\n            this.subledgerObj = res.result;\n          } else if (res.status == \"error\") {\n            this.partyMasterService.openErrorDialog(res.result);\n          }\n        }, error => {\n          this.partyMasterService.openErrorDialog(error.error.detail);\n        });\n      }\n    }\n\n    onKeyDown(event) {\n      if (event.key !== \"Enter\") {\n        event.preventDefault();\n      } else {\n        this.onEnterMainLedgerList();\n      }\n    }\n\n    onEnterMainLedgerList() {\n      this.gridPopupSettingsForLedger = {\n        title: \"Ledger List\",\n        apiEndpoints: `/getAllCustomerPaged/A`,\n        defaultFilterIndex: 1,\n        showIsDefaultSelection: true,\n        columns: [{\n          key: \"ACID\",\n          title: \"ACID\",\n          hidden: false,\n          noSearch: false\n        }, {\n          key: \"CUSTNAME\",\n          title: \"NAME\",\n          hidden: false,\n          noSearch: false\n        }]\n      };\n      this.genericMultiSelectLedger.show();\n    }\n\n    onSelectMainLedger(event) {\n      this.subledgerObj.MainLedgerId = event.ACID;\n      this.subledgerObj.MainLedgerName = event.CUSTNAME;\n    }\n\n    submit() {\n      if (this.subledgerObj.SL_ACNAME == \"\" || this.subledgerObj.SL_ACNAME == null || this.subledgerObj.SL_ACNAME == undefined) {\n        alert(\"Please Enter Sub Ledger Name.\");\n        return;\n      }\n\n      this.partyMasterService.saveNewSubLedgerGroup(this.mode, this.subledgerObj).subscribe(res => {\n        if (res.status == 'ok') {\n          this.partyMasterService.openSuccessDialog(\"Sub Ledger Saved Successfully!\");\n          this.subledgerObj = {};\n          this.router.navigate([this.returnUrl]); // Navigate to the previous route\n        } else if (res.status == 'error') {\n          this.partyMasterService.openErrorDialog(res.result);\n        }\n      }, error => {\n        this.partyMasterService.openErrorDialog(error.error.detail);\n      });\n    }\n\n    onCheckHasMainLedger(event) {\n      const input = event.target;\n\n      if (input.checked) {\n        this.subledgerObj.HASMAINGROUP = 1;\n      } else {\n        this.subledgerObj.HASMAINGROUP = 0;\n      }\n    }\n\n    keyPress(event) {\n      const pattern = /[0-9]/;\n      const inputChar = String.fromCharCode(event.charCode);\n\n      if (!pattern.test(inputChar)) {\n        // invalid character, prevent input\n        event.preventDefault();\n      }\n    }\n\n    goBack() {\n      this.router.navigate([this.returnUrl]); // Navigate to the previous route\n    }\n\n  }\n\n  CreateSubLedgerComponent.ɵfac = function CreateSubLedgerComponent_Factory(t) {\n    return new (t || CreateSubLedgerComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.PartyMasterLibraryService));\n  };\n\n  CreateSubLedgerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateSubLedgerComponent,\n    selectors: [[\"lib-create-sub-ledger\"]],\n    viewQuery: function CreateSubLedgerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.genericMultiSelectLedger = _t.first);\n      }\n    },\n    decls: 45,\n    vars: 7,\n    consts: [[1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"col-md-6\", \"px-0\"], [1, \"mb-0\", \"heading\"], [1, \"pe-5\", \"col-md-6\", \"d-flex\", \"justify-content-end\"], [\"id\", \"save\", 1, \"btn\", \"mr-2\", \"px-4\", 3, \"click\"], [\"id\", \"back\", 1, \"btn\", \"px-4\", 3, \"click\"], [1, \"border-bottom\", \"mb-3\"], [1, \"container\", \"scrollable-content\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-md-9\"], [1, \"row\", \"d-flex\", \"align-items-center\", \"mb-2\"], [1, \"col-12\", \"col-md-3\"], [\"for\", \"subLedgerName\", 1, \"form-label\", \"mr-2\"], [1, \"star\", \"mx-2\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"17\", \"height\", \"17\", \"viewBox\", \"0 0 17 17\", \"fill\", \"none\"], [\"d\", \"M9.03125 11.6875V7.4375H6.90625V8.5H7.96875V11.6875H6.375V12.75H10.625V11.6875H9.03125ZM8.5 4.25C8.34239 4.25 8.18833 4.29674 8.05728 4.3843C7.92623 4.47186 7.8241 4.59631 7.76378 4.74192C7.70347 4.88753 7.68769 5.04776 7.71844 5.20234C7.74918 5.35692 7.82508 5.49891 7.93652 5.61035C8.04797 5.7218 8.18996 5.79769 8.34454 5.82844C8.49912 5.85919 8.65934 5.84341 8.80495 5.78309C8.95056 5.72278 9.07502 5.62064 9.16258 5.48959C9.25014 5.35855 9.29688 5.20448 9.29688 5.04688C9.29688 4.83553 9.21292 4.63284 9.06348 4.4834C8.91403 4.33396 8.71134 4.25 8.5 4.25Z\", \"fill\", \"#9E9E9E\"], [\"d\", \"M8.5 15.9375C7.02901 15.9375 5.59104 15.5013 4.36795 14.6841C3.14486 13.8668 2.19158 12.7052 1.62865 11.3462C1.06572 9.98719 0.918435 8.49175 1.20541 7.04902C1.49239 5.60629 2.20074 4.28105 3.2409 3.2409C4.28105 2.20074 5.60629 1.49239 7.04902 1.20541C8.49175 0.918435 9.98719 1.06572 11.3462 1.62865C12.7052 2.19158 13.8668 3.14486 14.6841 4.36795C15.5013 5.59104 15.9375 7.02901 15.9375 8.5C15.9375 10.4726 15.1539 12.3643 13.7591 13.7591C12.3643 15.1539 10.4726 15.9375 8.5 15.9375ZM8.5 2.125C7.23915 2.125 6.00661 2.49889 4.95824 3.19938C3.90988 3.89988 3.09278 4.89552 2.61027 6.0604C2.12776 7.22528 2.00152 8.50707 2.2475 9.7437C2.49348 10.9803 3.10064 12.1162 3.9922 13.0078C4.88376 13.8994 6.01967 14.5065 7.2563 14.7525C8.49293 14.9985 9.77473 14.8722 10.9396 14.3897C12.1045 13.9072 13.1001 13.0901 13.8006 12.0418C14.5011 10.9934 14.875 9.76086 14.875 8.5C14.875 6.80925 14.2034 5.18774 13.0078 3.9922C11.8123 2.79665 10.1908 2.125 8.5 2.125Z\", \"fill\", \"#9E9E9E\"], [1, \"col-11\", \"col-md-5\"], [\"type\", \"text\", \"id\", \"mainLedgerName\", \"formControlName\", \"SubLedgerName\", \"placeholder\", \"Enter Sub Ledger Name\", 1, \"form-control\", \"px-2\", \"py-1\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"panNo\", 1, \"form-label\", \"mr-2\"], [\"type\", \"text\", \"id\", \"mainLedgerName\", \"formControlName\", \"PanNo\", \"placeholder\", \"Enter Pan\", \"maxlength\", \"9\", 1, \"form-control\", \"px-2\", \"py-1\", 3, \"ngModel\", \"ngModelChange\", \"keypress\"], [1, \"row\", \"mt-3\", \"mb-3\"], [1, \"col-12\", \"col-md-8\", \"offset-md-3\"], [\"type\", \"checkbox\", \"formControlName\", \"hasMainLedger\", 1, \"mr-2\", 3, \"ngModel\", \"ngModelChange\", \"change\", \"checked\"], [\"class\", \"row d-flex align-items-center mb-2\", 4, \"ngIf\"], [3, \"popupsettings\", \"onPopUpClose\"], [\"genericMultiSelectLedger\", \"\"], [\"for\", \"mainLedgerName\", 1, \"form-label\", \"mr-2\"], [\"type\", \"text\", \"id\", \"mainLedgerName\", \"formControlName\", \"MainLedgerName\", \"placeholder\", \"Press Enter to Select Main Ledger\", 1, \"form-control\", \"px-2\", \"py-1\", 3, \"ngModel\", \"keydown\", \"focus\", \"ngModelChange\"]],\n    template: function CreateSubLedgerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n        i0.ɵɵtext(3, \"New Sub Ledger \");\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function CreateSubLedgerComponent_Template_button_click_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(8, \"SAVE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CreateSubLedgerComponent_Template_button_click_9_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵtext(10, \"BACK\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(11, \"div\", 6);\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"form\", 8)(14, \"div\", 9)(15, \"div\", 10)(16, \"div\", 11)(17, \"div\", 12)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Sub Ledger Name\");\n        i0.ɵɵelementStart(20, \"span\", 14);\n        i0.ɵɵtext(21, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(22, \"svg\", 15);\n        i0.ɵɵelement(23, \"path\", 16)(24, \"path\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(25, \"div\", 18)(26, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSubLedgerComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.subledgerObj.SL_ACNAME = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 11)(28, \"div\", 12)(29, \"label\", 20);\n        i0.ɵɵtext(30, \" PAN No \");\n        i0.ɵɵelementStart(31, \"span\", 14);\n        i0.ɵɵtext(32, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(33, \"svg\", 15);\n        i0.ɵɵelement(34, \"path\", 16)(35, \"path\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(36, \"div\", 18)(37, \"input\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSubLedgerComponent_Template_input_ngModelChange_37_listener($event) {\n          return ctx.subledgerObj.PAN_NO = $event;\n        })(\"keypress\", function CreateSubLedgerComponent_Template_input_keypress_37_listener($event) {\n          return ctx.keyPress($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(38, \"div\", 22)(39, \"div\", 23)(40, \"input\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateSubLedgerComponent_Template_input_ngModelChange_40_listener($event) {\n          return ctx.subledgerObj.HASMAINGROUP = $event;\n        })(\"change\", function CreateSubLedgerComponent_Template_input_change_40_listener($event) {\n          return ctx.onCheckHasMainLedger($event);\n        })(\"checked\", function CreateSubLedgerComponent_Template_input_checked_40_listener() {\n          return ctx.subledgerObj.HASMAINGROUP == 1;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41, \" Has Main Ledger \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(42, CreateSubLedgerComponent_div_42_Template, 11, 1, \"div\", 25);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"multiselect-generic-grid\", 26, 27);\n        i0.ɵɵlistener(\"onPopUpClose\", function CreateSubLedgerComponent_Template_multiselect_generic_grid_onPopUpClose_43_listener($event) {\n          return ctx.onSelectMainLedger($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"[\", ctx.mode, \"]\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.subLedgerForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.subledgerObj.SL_ACNAME);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.subledgerObj.PAN_NO);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.subledgerObj.HASMAINGROUP);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.subledgerObj.HASMAINGROUP == 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"popupsettings\", ctx.gridPopupSettingsForLedger);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName, i5.MultiSelectGenericGridComponent],\n    styles: [\".heading[_ngcontent-%COMP%]{margin-left:3rem;font:400 1.75rem/2.25rem Roboto,sans-serif;letter-spacing:0}.scrollable-content[_ngcontent-%COMP%]{height:85vh;overflow-y:scroll}#save[_ngcontent-%COMP%]{background-color:#4081bf;color:#fff;font-size:14px;font-weight:200}#back[_ngcontent-%COMP%]{color:#336799;border:1px solid rgba(51,103,153,1);font-size:14px}#back[_ngcontent-%COMP%]:hover, #save[_ngcontent-%COMP%]:hover{background-color:#336899ac;color:#fff}label[_ngcontent-%COMP%], input[type=select][_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%]{font-family:Inter,sans-serif;font-weight:500;font-size:16px}input[_ngcontent-%COMP%]::placeholder{color:#acacac;font-size:14px;font-weight:400!important}.star[_ngcontent-%COMP%]{color:red}.form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus{border-color:#007bff40;box-shadow:0 0 0 .1rem #007bff40}.form-control[_ngcontent-%COMP%], .form-select[_ngcontent-%COMP%]{font-size:14px}@media (min-width:1200px){.container[_ngcontent-%COMP%]{max-width:1260px;padding-bottom:5%}}\"]\n  });\n  return CreateSubLedgerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}